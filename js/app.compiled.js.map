{
  "version": 3,
  "sources": [
    "node_modules/jake-web-utils/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/app.js",
    "lib/checklist.js",
    "lib/extend_promises.js",
    "lib/index.js",
    "lib/modules/checklist.js",
    "lib/modules/checklists.js",
    "lib/modules/header.js",
    "lib/promisify.js",
    "node_modules/ffos-fs/index.js",
    "node_modules/ffos-fs/mock.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\n\nvar m = require('mithril');\nvar promisify = require('./promisify');\nvar Checklist = require('./checklist');\nvar fs = require('ffos-fs');\n\nfunction controller() {\n  var ctrl = {\n    checklist: null,\n    checklists: []\n  };\n\n  ctrl.loading = false;\n\n  ctrl.loadChecklists = function()\n  {\n    ctrl.loading = true;\n    m.redraw();\n\n    m.startComputation();\n    ctrl.checklists.splice(0, ctrl.checklists.length);\n\n    // load checklists\n    promisify(fs, fs.readdir, 'sdcard:checklists')\n    .then(function(files) {\n      files = files.filter(function(file) {\n        return (file.name.substr(-('.checklist.json').length) === '.checklist.json');\n      });\n\n      return Promise.series(files.map(function(file) {\n        var p = Checklist.load('sdcard:' + file.name)\n        .then(function(checklist) {\n          ctrl.checklists.push(checklist);\n        })\n        .catch(function(err) {\n          console.error(err);\n        });\n\n        return p;\n      }));\n    })\n    .then(function() {\n      ctrl.loading = false;\n      m.endComputation();\n    })\n    .catch(function() {\n      ctrl.loading = false;\n      m.endComputation();\n    });\n  };\n\n  ctrl.headerModule = m.submodule(require('./modules/header'), ctrl);\n  ctrl.checklistsModule = m.submodule(require('./modules/checklists'), ctrl);\n  ctrl.checklistModule = m.submodule(require('./modules/checklist'), ctrl);\n\n  ctrl.loadChecklists();\n\n  return ctrl;\n}\n\nfunction view(ctrl)\n{\n  return [\n    ctrl.headerModule(),\n    m('section[role=\"main\"]', [\n      ctrl.loading ? m('p', t('Loading checklists')) : null,\n      ctrl.checklist ? ctrl.checklistModule() : ctrl.checklistsModule()\n    ])\n  ]\n}\n\nmodule.exports = function()\n{\n  m.module(document.getElementById('app'), {\n    controller: controller,\n    view: view\n  })\n};",
    "\"use strict\";\n\nvar fs = require('ffos-fs');\nvar promisify = require('./promisify');\n\nvar Checklist = module.exports = function Checklist(data)\n{\n  data = data || {};\n\n  var checklist = {\n    name: data.name,\n    filename: null,\n    items: data.items || []\n  };\n\n  checklist.save = function(overwrite, filename)\n  {\n    checklist.filename = filename || 'sdcard:checklists/' + checklist.name.toLowerCase().replace(/\\s/g, '_') + '.checklist.json';\n\n    return new Promise(function(resolve, reject) {\n      promisify(fs, fs.exists, checklist.filename)\n      .then(function(exists) {\n        if (exists) {\n          if (!overwrite) {\n            if (!confirm(t('Checklist already exists. Do you want to overwrite write?'))) {\n              reject(new Error('Checklist already exists.'));\n              return;\n            }\n          }\n\n          checklist.overwriten = true;\n\n          // overwriting files does not work yet in ffos-fs so we manually need to delete it first\n          promisify(fs, fs.unlink, checklist.filename)\n          .then(function() {\n            return promisify(fs, fs.writeFile, checklist.filename, checklist.toString(), {mimetype: 'application/json'});\n          })\n          .then(resolve)\n          .catch(reject);\n        }\n        else {\n          return promisify(fs, fs.writeFile, checklist.filename, checklist.toString(), {mimetype: 'application/json'})\n        }\n      })\n      .then(resolve)\n      .catch(reject);\n    });\n  };\n\n  checklist.addItem = function(item)\n  {\n    checklist.items.push(item);\n  };\n\n  checklist.removeItem = function(index)\n  {\n    checklist.items.splice(index, 1);\n  };\n\n  checklist.setItem = function(index, item)\n  {\n    if (index >= 0 && index < checklist.items.length) {\n      checklist.items[index] = item;\n    }\n  };\n\n  checklist.getItem = function(index)\n  {\n    if (index >= 0 && index < checklist.items.length) {\n      return checklist.items[index];\n    }\n\n    return null;\n  };\n\n  checklist.moveItemUp = function(index)\n  {\n    if (index === 0) return;\n    var item = checklist.items[index];\n    checklist.items.splice(index, 1);\n    checklist.items.splice(index - 1, 0, item);\n  };\n\n  checklist.moveItemDown = function(index)\n  {\n    if (index === checklist.items.length - 1) return;\n    var item = checklist.items[index];\n    checklist.items.splice(index, 1);\n    checklist.items.splice(index + 1, 0, item);\n  };\n\n  checklist.clearItems = function()\n  {\n    checklist.items.splice(0, checklist.items.length);\n  };\n\n  checklist.toString = function()\n  {\n    var data = {\n      name: checklist.name,\n      items: checklist.items\n    };\n    return JSON.stringify(data, null, 2);\n  };\n\n  return checklist;\n};\n\nmodule.exports.load = function(filename)\n{\n  return new Promise(function(resolve, reject) {\n    promisify(fs, fs.readFile, filename)\n    .then(function(content) {\n      try {\n        var data = JSON.parse(content);\n      }\n      catch(err) {\n        reject(err);\n        return;\n      }\n      var checklist = Checklist(data);\n      checklist.filename = filename;\n      resolve(checklist);\n    })\n    .catch(reject);\n  });\n};",
    "\"use strict\";\n\nmodule.exports = function(Promise)\n{\n  Promise.series = function(promises) {\n    var promises = promises.slice();\n\n    return new Promise(function(resolve, reject) {\n      function next()\n      {\n        if (promises.length) {\n          var promise = promises.shift();\n\n          promise\n          .then(next)\n          .catch(reject);\n        }\n        else {\n          resolve();\n        }\n      }\n\n      next();\n    });\n  }\n};",
    "\"use strict\";\n\nrequire('es6-promise').polyfill();\nrequire('./extend_promises')(Promise);\nvar global = (window || global);\nvar translate = require('translate.js');\nvar t = global.t = null;\nvar locale = 'en';\nvar m = require('mithril');\n\nvar fs = require('ffos-fs');\n\n// set filesystem to in memory mock mode if its not supported\nif (!navigator.getDeviceStorage) {\n  fs.mock();\n  var Checklist = require('./checklist');\n  var checklist = Checklist({\n    name: 'test',\n    items: ['test1 really long item. With multiple sentences. And probably three lines of text or much much much much more.', 'test2', 'test3', 'test4']\n  });\n\n  checklist.save();\n}\n\n// extend mithril with submodule method\nm.submodule = function(/*module, arg1, ..., argN*/) {\n  var args = Array.prototype.slice.call(arguments);\n  var module = args.shift();\n\n  return module.view.bind(this, module.controller.apply(this, args));\n};\n\nvar app = require('./app');\n\n// load translations\nvar req = new XMLHttpRequest();\nreq.open('GET', 'locales/' + locale + '.json', true);\nreq.responseType = 'json';\nreq.onload = function()\n{\n  var data = req.response;\n\n  global.t = translate(data, {\n    debug: true,\n    namespaceSplitter: '.'\n  });\n\n  app();\n};\nreq.onerror = function(error)\n{\n  if (err) throw err;\n};\nreq.send();",
    "\"use strict\";\n\nvar m = require('mithril');\n\nfunction controller(mainCtrl)\n{\n  var ctrl = {\n    mainCtrl: mainCtrl,\n    newItem: ''\n  };\n\n  ctrl.add = function()\n  {\n    var item = ctrl.newItem.trim();\n    if (!item.length) return;\n\n    ctrl.newItem = '';\n    ctrl.mainCtrl.checklist.addItem(item);\n\n    return false;\n  };\n\n  ctrl.remove = function(index) {\n    if (confirm(t('Do you really want to remove this item?'))) {\n      ctrl.mainCtrl.checklist.removeItem(index);\n    }\n  };\n\n  return ctrl;\n}\n\nfunction itemView(ctrl, checklist, item, i)\n{\n  return m('li.checklist-item' + (checklist.edit ? '.edit' : ''),\n    m('label.pack-checkbox', {\n      style: checklist.edit ? 'display:none' : ''\n    }, [\n      m('input[type=\"checkbox\"]'),\n      m('span')\n    ]),\n    m('aside.pack-end', {style: checklist.edit ? 'display: block' : '' }, [\n      i > 0 ?\n      m('a.move-item-btn.gaia-icon.icon-back[href=\"javascript:;\"]', {\n        onclick: checklist.moveItemUp.bind(checklist, i),\n        title: t('up')\n      }) : null,\n      i < checklist.items.length - 1 ?\n      m('a.move-item-btn.gaia-icon.icon-foward[href=\"javascript:;\"]', {\n        onclick: checklist.moveItemDown.bind(checklist, i),\n        title: t('down')\n      }) : null,\n      m('a.remove-item-btn.gaia-icon.icon-delete[href=\"javascript:;\"]', {\n        onclick: ctrl.remove.bind(ctrl, i),\n        title: t('remove')\n      })\n    ]),\n    checklist.edit ?\n    m('input[type=\"text\"]', {\n      value: item,\n      oninput: function(e) {\n        checklist.setItem(i, e.target.value);\n      }\n    }) : m('a[href=\"javascript:;\"]', m('p', item))\n  );\n}\n\nfunction view(ctrl)\n{\n  var checklist = ctrl.mainCtrl.checklist;\n\n  return [\n    m('section[data-type=\"list\"]',\n      m('ul.checklist-items[data-type=\"edit\"]', checklist.items.map(itemView.bind(null, ctrl, checklist)))\n    ),\n\n    checklist.edit ? [\n      m('input[type=\"text\"]', {\n        placeholder: t('Description of new item'),\n        value: ctrl.newItem,\n        oninput: function(e) {\n          var value = e.target.value;\n          ctrl.newItem = value;\n        },\n        onkeyup: function(e) {\n          if (e.keyCode === 13) {\n            ctrl.add();\n            e.target.blur();\n          }\n        }\n      }),\n      m('a.button[href=\"javascript:;\"]', {\n      onclick: ctrl.add\n    }, t('create item'))\n    ] : null\n  ];\n}\n\nmodule.exports = {\n  controller: controller,\n  view: view\n};",
    "\"use strict\";\n\nvar m = require('mithril');\nvar fs = require('ffos-fs');\nvar promisify = require('../promisify');\nvar Checklist = require('../checklist');\n\nfunction controller(mainCtrl)\n{\n  var ctrl = {\n    mainCtrl: mainCtrl,\n    newName: ''\n  };\n\n  ctrl.open = function(checklist) {\n    ctrl.mainCtrl.checklist = checklist;\n  };\n\n  function checklistIndexByFilename(filename)\n  {\n    for (var i = 0; i < ctrl.mainCtrl.checklists.length; i++) {\n      if (ctrl.mainCtrl.checklists.filename === filename) return i;\n    }\n\n    return -1;\n  }\n\n  ctrl.add = function() {\n    var name = ctrl.newName.trim();\n    if (!name.length) return;\n\n    ctrl.newName = '';\n\n    var checklist = Checklist({\n      name: name\n    });\n\n    m.startComputation();\n    checklist.save()\n    .then(function() {\n      checklist.edit = true;\n      if (checklist.overwriten) {\n        var index = checklistIndexByFilename(checklist.filename);\n        ctrl.mainCtrl.checklists.splice(index, 1, checklist);\n      }\n      else {\n        ctrl.mainCtrl.checklists.push(checklist);\n      }\n\n      mainCtrl.checklist = checklist;\n      m.endComputation();\n    })\n    .catch(function() {\n      m.endComputation();\n      alert(t('errors.checklist.create'));\n    });\n\n    return false;\n  };\n\n  ctrl.remove = function(index)\n  {\n    var checklist = ctrl.mainCtrl.checklists[index];\n    if (checklist) {\n      if (confirm(t('Are you sure you want to remove this checklist?'))) {\n        ctrl.mainCtrl.checklists.splice(index, 1);\n\n        m.startComputation();\n        promisify(fs, fs.unlink, checklist.filename)\n        .then(function() {\n          m.endComputation();\n        })\n        .catch(function() {\n          alert(t('errors.checklist.remove'));\n          m.endComputation();\n        });\n      }\n    }\n  };\n\n  return ctrl;\n}\n\nfunction checklistView(ctrl, checklist, i) {\n  return m('li', [\n    m('aside.pack-end',\n        m('a.gaia-icon.icon-delete[href=\"javascript:;\"]', {\n          onclick: ctrl.remove.bind(ctrl, i),\n          title: t('remove')\n        })\n    ),\n    m('p', [\n      m('a[href=\"javascript:;\"', {\n        onclick: ctrl.open.bind(ctrl, checklist)\n      }, checklist.name)\n    ]),\n  ]);\n}\n\nfunction view(ctrl)\n{\n  return [\n    ctrl.mainCtrl.checklists.length ?\n    m('ul[data-type=\"list\"]', ctrl.mainCtrl.checklists.map(checklistView.bind(null, ctrl)))\n    : m('ul[data-type=\"list\"]', m('li', m('p', t('No checklists yet.')))),\n\n    m('input[type=\"text\"]', {\n      placeholder: t('Name for new checklist'),\n      oninput: function(e) {\n        var el = e.target;\n        var value = el.value;\n        ctrl.newName = el.value;\n      },\n      onkeyup: function(e) {\n        if (e.keyCode === 13) {\n          ctrl.add();\n          e.target.blur();\n        }\n      },\n      value: ctrl.newName\n    }),\n    m('a.button', {\n      onclick: ctrl.add\n    }, t('create checklist'))\n  ]\n}\n\nmodule.exports = {\n  controller: controller,\n  view: view\n};",
    "\"use strict\";\n\nvar m = require('mithril');\n\nfunction controller(mainCtrl)\n{\n  var ctrl = {\n    mainCtrl: mainCtrl\n  };\n\n  ctrl.closeChecklist = function()\n  {\n    ctrl.mainCtrl.checklist.edit = false;\n    ctrl.mainCtrl.checklist = null;\n  };\n\n  ctrl.editChecklist = function()\n  {\n    ctrl.mainCtrl.checklist.edit = true;\n  };\n\n  ctrl.saveChecklist = function()\n  {\n    var checklist = ctrl.mainCtrl.checklist;\n    checklist.edit = false;\n    m.startComputation();\n    checklist.save(true, checklist.filename)\n    .then(function() {\n      m.endComputation();\n    })\n    .catch(function(err) {\n      console.error(err);\n      alert(t('errors.checklist.save'));\n      m.endComputation();\n    });\n  };\n\n  return ctrl;\n}\n\nfunction listView(ctrl)\n{\n  return m('section.header[role=\"region\"]',\n    m('header', [\n      m('h1', t('Checklists'))\n    ])\n  );\n}\n\nfunction checklistView(ctrl)\n{\n  var checklist = ctrl.mainCtrl.checklist;\n\n  return m('section.header[role=\"region\"]',\n    m('header', [\n      m('menu[type=\"toolbar\"]', [\n        checklist.edit ?\n          m('a.button[href=\"javascript:;\"', {\n            onclick: ctrl.saveChecklist\n          }, t('done'))\n          : m('a.button[href=\"javascript:;\"', {\n          onclick: ctrl.editChecklist\n        }, t('edit'))\n      ]),\n      m('a[href=\"javascript:;\"', {\n        onclick: ctrl.closeChecklist,\n        title: t('back')\n      }, m('span.icon.icon-back')),\n      m('h1', checklist.edit ? m('input[type=\"text\"]', {\n        value: checklist.name,\n        oninput: function(e)\n        {\n          var value = e.target.value;\n          checklist.name = value;\n        }\n      }) : checklist.name)\n    ])\n  );\n}\n\nfunction view(ctrl)\n{\n  return ctrl.mainCtrl.checklist ?\n  checklistView(ctrl) : listView(ctrl);\n}\n\nmodule.exports = {\n  controller: controller,\n  view: view\n};",
    "\"use strict\";\n\n/**\n * Creates a promise out of a async function call that takes a callback as last argument\n * @param thisArg {Object} - object to call the function on\n * @param fn {Function} - function to call (must take callback as last argument)\n * @param arg1 ... argN - any number of arguments to be passed to the function (except the callback)\n * @returns {Promise}\n */\nmodule.exports = function(/*thisArg, fn, arg1, arg..., argN*/)\n{\n  var args = Array.prototype.slice.call(arguments);\n\n  var self = args.shift();\n  var fn = args.shift();\n\n  return new Promise(function(resolve, reject) {\n    function callback() {\n      var args = Array.prototype.slice.call(arguments);\n      var err = args.shift();\n\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve.apply(null, args);\n    }\n\n    args.push(callback);\n    fn.apply(self, args);\n  });\n};",
    "var mock = require('./mock');\n\nmodule.exports = new (function() {\n  function hasDeviceStorage()\n  {\n    if (!navigator || typeof navigator.getDeviceStorage !== 'function') {\n      console.warn('Your Browser does not support device storage.');\n      return false;\n    }\n\n    return true;\n  }\n\n  hasDeviceStorage();\n\n  var self = this;\n  var mocked = false;\n\n  function toArray(arr)\n  {\n    return Array.prototype.slice.apply(arr);\n  }\n\n  function getStorageTypeFromPath(path)\n  {\n    var type = path.split(':', 2)[0];\n    return type;\n  }\n\n  function getPathWithoutStorageType(path)\n  {\n    var parts = path.split(':');\n    if (parts.length > 1) {\n      return parts.slice(1).join(':');\n    }\n    else {\n      return path;\n    }\n  }\n\n  function getStorage(type)\n  {\n    if (!hasDeviceStorage()) {\n      return null;\n    };\n\n    return navigator.getDeviceStorage(type);\n  }\n\n  function getStorageForPath(path)\n  {\n    return getStorage(\n      getStorageTypeFromPath(path)\n    );\n  }\n\n  function getEditableFile(fd, callback)\n  {\n    if (fd instanceof LockedFile)\n    {\n      callback(null, fd);\n      return;\n    }\n    else if(fd instanceof File)\n    {\n      self.open(fd.fullname || fd.name, 'w', callback);\n      return;\n    }\n    else if (fd instanceof FileHandle)\n    {\n      callback(null, fd.open());\n    }\n    else {\n      callback(new Error('No valid File given.'));\n      return;\n    }\n  }\n\n  function getReadableFile(fd, callback)\n  {\n    if (fd instanceof LockedFile)\n    {\n      callback(null, fd);\n      return;\n    }\n    else if(fd instanceof File)\n    {\n      callback(null, fd);\n      return;\n    }\n    else if (fd instanceof FileHandle)\n    {\n      var request = fd.getFile();\n      request.onsuccess = function() {\n        callback(null, this.file);\n      };\n      request.onerror = function()\n      {\n        callback(this.error);\n      };\n      return;\n    }\n    else {\n      callback(new Error('No valid File given.'));\n      return;\n    }\n  }\n\n  /**\n   * Sets the filesystem to a mocking in-memory filesystem.\n   */\n  this.mock = function()\n  {\n    mock();\n    mocked = true;\n    console.warn('Using in memory mock for filesystem now.');\n  };\n\n  this.open = function(path, flags, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    path = path.trim();\n    var storage = getStorageForPath(path);\n\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + path + '.'));\n      return;\n    }\n\n    var method = 'get';\n\n    switch(flags) {\n      case 'r':\n        method = 'get';\n        break;\n\n      case 'w':\n        method = 'getEditable';\n        break;\n    }\n\n    var request = storage[method](getPathWithoutStorageType(path));\n\n    request.onsuccess = function() {\n      callback(null, this.result);\n    };\n    request.onerror = function() {\n      callback(this.error, null);\n    };\n  };\n\n  this.exists = function(path, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    if (mocked) {\n      existsMock(path, callback);\n      return;\n    }\n\n    this.open(path, 'r', function(error, file) {\n      callback(null, (error || !file) ? false : true);\n    });\n  };\n\n  function existsMock(path, callback)\n  {\n    var storage = getStorageForPath(path);\n    if (storage) {\n      callback(null, (storage.files[path]) ? true : false);\n    }\n    else {\n      callback(new Error('Unable to find entry point for ' + path + '.'));\n    }\n  }\n\n  this.read = function(fd, blob, offset, length, position, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    if (!fd) {\n      throw new Error('Missing File.');\n      return;\n    }\n    if (!blob || !(blob instanceof Blob)) {\n      throw new Error('Missing or invalid Blob.');\n      return;\n    }\n\n    getReadableFile(fd, function(error, fd) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      var offset = offset || 0;\n      var length = length || fd.size;\n      if (length > fd.size) {\n        length = fd.size;\n      }\n      var position = position || 0;\n\n      blob.splice(\n        offset,\n        length,\n        fd.slice(position, length)\n      );\n      callback(null, length, blob);\n    });\n  };\n\n  this.readFile = function(/* filename, [options], callback */)\n  {\n    var args = toArray(arguments);\n\n    var filename = args.shift();\n    var callback = args.pop();\n    var opts = args.pop() || {};\n\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    var options = {\n      encoding: opts.encoding || 'utf8',\n      format: opts.format || 'text',\n      flag: opts.flag || 'r'\n    };\n\n    if (mocked) {\n      readFileMock(filename, options, callback);\n      return;\n    }\n\n    this.open(filename, options.flag, function(error, fd) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      getReadableFile(fd, function(error, fd) {\n        if (error) {\n          callback(error);\n          return;\n        }\n\n        var reader = new FileReader();\n\n        reader.onerror = function(error)\n        {\n          callback(error);\n        };\n        reader.addEventListener('loadend', function() {\n          callback(null, reader.result);\n        });\n\n        switch(options.format) {\n          case null:\n          case 'text':\n            reader.readAsText(fd, options.encoding);\n            break;\n          case 'binary':\n            reader.readAsBinaryString(fd);\n            break;\n\n          case 'dataURL':\n            reader.readAsDataURL(fd);\n            break;\n\n          case 'buffer':\n            reader.readAsArrayBuffer(fd);\n            break;\n\n          default:\n            reader.readAsText(fd, options.encoding);\n        }\n      });\n    });\n  };\n\n  function readFileMock(filename, options, callback)\n  {\n    var storage = getStorageForPath(filename);\n\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + filename + '.'));\n      return;\n    }\n\n    var file = storage.files[filename] || null;\n    var data = null;\n    if (file) {\n      switch(options.format) {\n        case 'text':\n          data = file.toText();\n          break;\n\n        case 'binary':\n          data = file.toBinaryString();\n          break;\n\n        case 'dataURL':\n          data = file.toDataURL();\n          break;\n\n        case 'buffer':\n          data = file.toArrayBuffer();\n          break;\n\n        default:\n          data = file.toText();\n      }\n    }\n\n    callback(null, data);\n  }\n\n  this.write = function(fd, buffer, offset, length, position, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    if (!fd) {\n      throw new Error('Missing File.');\n      return;\n    }\n\n    if (!buffer || (!(buffer instanceof ArrayBuffer) && typeof buffer !== 'string')) {\n      throw new Error('Missing or invalid Buffer.');\n      return;\n    }\n\n    getEditableFile(fd, function(error, fd) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      var offset = offset || 0;\n      var length = length || buffer.length;\n      if (length > buffer.length) {\n        length = buffer.length;\n      }\n      var position = position || 0;\n      var data;\n\n      if (buffer instanceof ArrayBuffer) {\n        data = buffer.slice(offset, length);\n      }\n      else {\n        data = buffer.substr(offset, length);\n      }\n\n      var request = fd.write(data);\n      request.onsuccess = function() {\n        callback(null, length, buffer);\n      };\n      request.onerror = function() {\n        callback(this.error, 0, buffer);\n      };\n    });\n  };\n\n  this.writeFile = function(/* filename, data, [options], callback */)\n  {\n    var args = toArray(arguments);\n\n    var filename = args.shift();\n    var data = args.shift();\n    var callback = args.pop();\n    var opts = args.pop() || {};\n    var options = {\n      encoding: opts.encoding || 'utf8',\n      mimetype: opts.mimetype || 'text/plain',\n      flag: opts.flag || 'w'\n    };\n\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n\n    this.exists(filename, function(error, exists) {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      if (mocked) {\n        writeFileMock(filename, data, options, callback);\n        return;\n      }\n\n      var storage = getStorageForPath(filename);\n\n      if (!storage) {\n        callback(new Error('Unable to find entry point for ' + filename + '.'));\n        return;\n      }\n\n      // get existing file for writing\n      if (exists) {\n        self.open(filename, options, function(err, fd) {\n          if (err) {\n            callback(err);\n            return;\n          }\n\n          // TODO: convert blob data to ArrayBuffer here?\n          var buffer = data;\n          fd.fullname = filename;\n\n          self.write(fd, buffer, 0, buffer.length, 0, function(err) {\n            if (err) {\n              callback(err);\n              return;\n            }\n\n            callback(null);\n          });\n        });\n      }\n      // create new file\n      else {\n        var file = (data instanceof Blob) ? data : new Blob([data], { type: options.mimetype });\n        var filepath = getPathWithoutStorageType(filename);\n\n        var request = storage.addNamed(file, filepath);\n        request.onsuccess = function()\n        {\n          callback(null);\n        };\n        request.onerror = function()\n        {\n          callback(this.error);\n        };\n      }\n    });\n  };\n\n  function writeFileMock(filename, data, options, callback)\n  {\n    var storage = getStorageForPath(filename);\n\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + filename + '.'));\n      return;\n    }\n\n    storage.files[filename] = new mock.FileMock(filename, options.mimetype, data);\n    callback(null);\n  }\n\n  this.readdir = function(path, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n    var storage = getStorageForPath(path);\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + path + '.'));\n      return;\n    }\n\n    if (mocked) {\n      callback(null, storage.readdir(path));\n      return;\n    }\n\n    var dirpath = getPathWithoutStorageType(path);\n    var cursor = storage.enumerate(dirpath);\n\n    var files = [];\n\n    cursor.onsuccess = function()\n    {\n      if (this.result) {\n        files.push(this.result);\n\n        this.continue();\n      }\n      else if (this.done) {\n        callback(null, files);\n      }\n    };\n    cursor.onerror = function()\n    {\n      callback(this.error, files);\n    }\n  };\n\n  this.unlink = function(path, callback)\n  {\n    if (typeof callback !== 'function') {\n      var callback = function() {};\n    }\n    var filepath = getPathWithoutStorageType(path);\n    var storage = getStorageForPath(path);\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + path + '.'));\n      return;\n    }\n\n    if (mocked) {\n      unlinkMock(path, callback);\n      return;\n    }\n\n    var request = storage.delete(filepath);\n    request.onsuccess = function()\n    {\n      callback(null);\n    };\n    request.onerror = function()\n    {\n      callback(this.error);\n    };\n  };\n\n  function unlinkMock(path, callback)\n  {\n    var storage = getStorageForPath(path);\n    if (!storage) {\n      callback(new Error('Unable to find entry point for ' + path + '.'));\n      return;\n    }\n\n    delete storage.files[path];\n    callback(null);\n  }\n})();",
    "\"use strict\";\n\nvar FileMock = function(filename, type, data)\n{\n  var self = this;\n  this.name = filename.split(':', 2)[1];\n  this.lastModifiedDate = new Date();\n  this.size = 0;\n  this.type = 'text/plain';\n  this.data = data;\n  this.blob = new Blob([data], {\n    type: this.type\n  });\n  this.buffer = getArrayBuffer();\n\n  this.slice = this.blob.slice.bind(this.blob);\n\n  this.toText = function()\n  {\n    return this.data.toString();\n  };\n\n  this.toBinaryString = function()\n  {\n    return this.data.toString();\n  };\n\n  this.toDataURL = function()\n  {\n    return this.data.toString();\n  };\n\n  this.toArrayBuffer = function()\n  {\n    return this.buffer;\n  };\n\n  function getArrayBuffer()\n  {\n    var buffer = new ArrayBuffer(self.data.length);\n    for(var i = 0; i < self.data.length; i++) {\n      buffer[i] = self.data[i];\n    }\n\n    return buffer;\n  }\n};\n\nvar Storage = function(type)\n{\n  var self = this;\n\n  this.type = type;\n  this.files = {};\n  this.readdir = function(path)\n  {\n    var files = [];\n    Object.keys(self.files).forEach(function(file) {\n      if (file.indexOf(path) === 0) {\n        files.push(self.files[file]);\n      }\n    });\n\n    files.sort();\n    return files;\n  };\n};\n\nmodule.exports = function() {\n  var global = (window || global);\n  var navigator = (global.navigator || {});\n\n  var storages = {\n    'sdcard': new Storage('sdcard')\n  };\n\n  navigator.getDeviceStorage = function (type) {\n    return storages[type] || null;\n  };\n};\nmodule.exports.Storage = Storage;\nmodule.exports.FileMock = FileMock;"
  ]
}